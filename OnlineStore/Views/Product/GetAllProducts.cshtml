@model List<OnlineStoreModel.CustomModels.ProductListModel>

@{
    Layout = "~/Views/Shared/_ProductListLayout.cshtml";
}

<style>
    .box {
        width: 300px !important;
        height: 300px !important;
    }

    .img-box {
        width: min(100%,300px);
        height: 100%;
        /*max-width: 300px;*/
        /*height: 300px;*/
    }

    .product-box {
        width: min(100%,500px);
        height: 100%;
        max-width: 500px;
    }
</style>

<div class="position-absolute d-none d-sm-block" style="left:18px; top:10px;">
    <button class="btn" onclick="history.back()">
        <i class="fa-solid fa-circle-arrow-left fa-xl" style="color: #4e73df"></i>
    </button>
</div>
@if(TempData.ContainsKey("subcategoryID") && Convert.ToInt32(TempData.Peek("subcategoryID")) != -1)
{
    <div class="position-absolute" style="right:68px; top:10px;">
        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#filterModel">
            Filters
            <i class="fa-solid fa-filter"></i>
        </button>
    </div>
}


<div>
    @{ 
        if (Model.Count == 0) {
            <h3 class="text-center text-secondary">No Products Available</h3>
        }
    }

    @foreach (var product in Model)
    {
        string firstImage = "";
        if (product.ImagePaths != null)
        {
            firstImage = product.ImagePaths[0];
        }
        <div class="card mb-4 border-black rounded-4">
            <h5 class="card-header bg-primary-subtle fw-bold text-primary rounded-top-4">@product.ProductName</h5>
            <div class="card-body row mx-0 px-0 position-relative">
                <div class="col-12 col-lg-5 text-center">
                    <div id="carousel-@product.ProductID" class="carousel slide carousel-dark" data-bs-ride="carousel">
                        <div class="carousel-inner d-flex align-items-center " style="width:100%; height:400px">
                            @{
                                if (product.ImagePaths != null)
                                {
                                    foreach (var img in product.ImagePaths)
                                    {
                                        <div class="carousel-item @(img.Equals(firstImage) ? "active" : "") text-center">
                                            <img src="~/Content/ProductImages/@img" class="d-block mx-auto img-box">
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="mx-auto">
                                        <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQlomRxuD2hXxPAPem4LggnMmje2M5z_ZNvRg&s">
                                    </div>
                                }
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@product.ProductID" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#carousel-@product.ProductID" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
                <div class="col-lg-7 col-12 d-flex flex-column justify-content-between gap-lg-0 gap-5">
                    <div class="border-start border-primary-subtle border-3 ">
                        <div class="ps-2">
                            <h5 class="card-title mb-0">@product.ProductDescription</h5>                            
                            <div>
                                <h1 class="text-primary fw-bold">@product.ProductPrice<small>₹</small></h1>
                            </div>
                            @{ if (product.RatingCount != 0)
                                {
                                    decimal rating = Convert.ToDecimal(@product.RatingCount);
                                    for (int i = 1; i <= rating; i++)
                                    {
                                        <i class="fa-solid fa-star fa-xl" style="color: #FFD43B;"></i>
                                    }
                                    decimal precision = rating - Convert.ToInt32(rating);
                                    if(precision != 0) {
                                        <i class="fa-solid fa-star-half-stroke fa-xl" style="color: #FFD43B;"></i>
                                        rating++;
                                    }
                                    for (int i = 5; i > rating; i--)
                                    {
                                        <i class="fa-regular fa-star fa-xl" style="color: #FFD43B;"></i>
                                    }
                                    <span class="card-text text-secondary fw-bold mb-0">(@product.RatingCount)</span>
                                } 
                            }
                            @{ if (product.InStock > 0)
                                                {
                                <p class="card-text text-success fw-bold">In Stock</p> }
                                                else
                                                {
                                <p class="card-text fw-bold text-danger mb-0">Out Of Stock</p> } }
                        </div>
                    </div>
                    <div class="text-lg-end">
                        @Html.ActionLink("Details", "GetProductDetails", "Product", new { @productID = product.ProductID }, new { @class = "btn btn-secondary" })
                        @{
                            if (product.InStock > 0)
                            {
                                <button class="btn btn-primary addToCart" prod-id="@product.ProductID" id="addToCart">Add to cart</button>
                                @Html.ActionLink("Buy", "BuyProduct", "Product", new { @productID = product.ProductID }, new { @class = "btn btn-success" })
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<script>
    $('.addToCart').on('click', function () {
        let prodID = $(this).attr('prod-id');
        $.ajax({
            url: "/Cart/AddProductToCart?productID=" + prodID,
            type: "GET",
            dataType: "json",
            success: function (response) {
                var toast = new bootstrap.Toast($('#liveToast'));
                toast.show();
            },
            error: function (err) {
                toastr.error("Can't add item")
                
            }
        })
    })
</script>