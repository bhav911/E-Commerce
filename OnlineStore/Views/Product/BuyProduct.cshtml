@model OnlineStoreModel.CustomModels.ProductModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="p-md-0 px-4 pt-4">
    <h4>@Model.ProductName</h4>
    <hr />
    <div class="d-flex justify-content-between">
        <div>
            <dl>
                <dt>
                    Description
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ProductDescription)
                </dd>
                <div class="fs-2 text-primary fw-bold">
                    @Html.DisplayFor(model => model.ProductPrice)₹
                </div>

                <dd>
                    <p class="text-success fw-bold">Available</p>
                </dd>
            </dl>
        </div>
    </div>
</div>
<form method="post" class="text-end px-4" action="/Order/BuyProduct">
    <input type="text" name="productID" hidden value="@Model.ProductID" />
    <input type="text" name="shopID" hidden value="@Model.OwnerID" />
    <input type="text" name="ProductPrice" hidden value="@Model.ProductPrice" />
    <div class="d-flex gap-2 align-items-center justify-content-md-end justify-content-start ">
        <label class="fw-bold fs-4">Quantity:</label>
        <button type="button" class="btn btn-success" id="incQuantity">+</button>
        <button id="quantityHolder" type="button" class="btn btn-secondary">1</button>
        <button type="button" class="btn btn-danger" id="decQuantity">-</button>
    </div>
    <input type="number" hidden class="" id="quantity" name="quantity" value="1" min="0" max="@Model.InStock"/>
    <div class="text-sm-center text-start my-4">
        <button type="button" class="btn btn-success" id="reviewBtn" data-bs-toggle="modal" data-bs-target="#reviewModal">Review</button>
        <button type="button"  onclick="history.back();" class="btn btn-secondary">Cancel</button>
        </div>
    <div class="modal fade text-start" id="reviewModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content mx-3">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Review Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="">
                        <h3 class="mb-0">
                            @Model.ProductName
                        </h3>
                        <p class="fs-2 text-primary fw-bold">
                            @Model.ProductPrice
                        </p>
                    </div>
                    <div>
                        <p>Quantity:<span id="modelQuantity"></span></p>

                        <p>Sub Total:<span id="modelSubTotal"></span></p>

                        <p>Discount:<span id="modelDiscount"></span></p>

                        <p>Total Price:<span id="modelTotatPrice"></span></p>

                    </div>
                    <div>
                        <select name="couponApplied" class="form-select" id="CouponHolder">
                            <option>Apply Coupon</option>
                        </select>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success">Buy</button>
                </div>
            </div>
        </div>
    </div>
</form>


<script>
    let quantity = $('#quantityHolder');
    let inputQuantity = $('#quantity');


    $('#incQuantity').on('click', function () {
        let curQuantity = parseInt($(quantity).text());
        if (curQuantity == @Model.InStock) {
            toastr.error("Cant't Add More")
            return;
        }
        quantity.text(curQuantity + 1);
        $(inputQuantity).val(curQuantity + 1);
    })
    $('#decQuantity').on('click', function () {
        let curQuantity = parseInt($(quantity).text());
        if (curQuantity == 1)
            return;
        quantity.text(curQuantity - 1);
        $(inputQuantity).val(curQuantity - 1);
    })

    $('#CouponHolder').on('change', function () {
        let discount = parseInt($(this).find('option:selected').attr('disc'));
        $('#modelDiscount').text(discount);
        debugger
        let subtotal = parseInt($('#modelSubTotal').text())
        $('#modelTotatPrice').text(subtotal - (subtotal * (discount / 100)))
    })

    $('#reviewBtn').on('click', function () {
        $('#modelDiscount').text("NA")
        let quantity = parseInt($('[name="quantity"]').val())
        let unitPrice = parseInt($('[name="ProductPrice"]').val())
        let price = unitPrice * quantity
        $('#modelQuantity').text(quantity)
        $('#modelSubTotal').text(price)
        $('#modelTotatPrice').text(price)
        $.ajax({
            url: "/Coupon/GetCouponsForOffer",
            method: "GET",
            contentType: "json",
            success: function (coupon) {
                debugger
                let select = $('#CouponHolder');
                $(select).empty()
                $(select).append(`<option value='-1'>Apply Coupon</option>`)
                $.each(coupon, (ind, ele) => {
                    if (ele.MinimunPurchase < price)
                        $(select).append(`
                            <option value='${ele.CouponID}' disc='${ele.CouponDiscount}'> ${ele.CouponName}</option>
                        `)
                })
            },
            error: function (err) {

            }
        })
    })
</script>