@model OnlineStoreModel.CustomModels.NewRegistration 

@{ Layout = "~/Views/Shared/_LoginLayout.cshtml"; }


<script>
    $(document).ready(function(){
        $.ajax({
            url: "/login/GetStates",
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                $.each(response, (ind, ele) => {
                    $('#state-holder').append(`
                        <option value="${ele.StateID}">${ele.StateName}</option>
                    `)
                })
            },
            error: function (xhr, status, error) {

            }
        });
    });

    function changeCity() {
        debugger
        let stateID = $('#state-holder').val();
        $.ajax({
            url: "/login/GetCities?stateID=" + stateID,
            type: "GET",
            dataType: "json",
            success: function (response) {
                debugger
                $('#city-holder').empty();
                $('#city-holder').append("<option value='NIL'>Select City</option>");

                $.each(response, (ind, ele) => {
                    $('#city-holder').append(`
                        <option value="${ele.CityID}">${ele.CityName}</option>
                    `)
                })
            },
            error: function (xhr, status, error) {

            }
        })
    }

    function toggleDescription() {
        if ($('#role').val() == "Admin") {
            $('#shopDescription').removeClass("d-none");
            $('#UsernameLabel').text("Shop name");
            $('#hideGender').addClass("d-none");
        }
        else {
            $('#shopDescription').addClass("d-none");
            $('#UsernameLabel').text("Username");
            $('#hideGender').removeClass("d-none");
        }
    }
  
    function resetForm() {
        let role = $('#role').val();
        document.getElementById('signup').reset();
        $('#role').val(role);
        toggleDescription();
    }

</script>

<div>
    <form method="post" id="signup">
        <div class="mb-3">
            <select class="form-select text-success p-3 fw-bold border border-success" name="Role" onchange="resetForm()" id="role">
                <option value="">Select Role</option>
                <option>Admin</option>
                <option>Customer</option>
            </select>
            @Html.ValidationMessageFor(m => m.Role, null, new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.Username, "Username", new { @id= "UsernameLabel" })
                    @Html.ValidationMessageFor(m => m.Username, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.Email, "Email")
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-floating mb-3 d-none" id="shopDescription">
            @Html.TextAreaFor(m => m.Description, new { @class="form-control", @placeholder=""})
            @Html.LabelFor(m => m.Description, "Describe your merchandise")
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.Password, "Password")
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-floating mb-3">
                    @Html.TextBoxFor(m => m.Confirm_password, new { @class = "form-control", @placeholder = "" })
                    @Html.LabelFor(m => m.Confirm_password, "Confirm Password")
                    @Html.ValidationMessageFor(m => m.Confirm_password, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-4">
                <select id="state-holder" class="form-select p-3" name="StateID" onchange="changeCity()">
                    <option value="">Select State</option>
                </select>
                @Html.ValidationMessageFor(m => m.StateID, null, new { @class = "text-danger" })
            </div>
            <div class="col-4">
                <select class="form-select p-3" id="city-holder" name="CityID">
                    <option value="">Select City</option>
                </select>
                @Html.ValidationMessageFor(m => m.CityID, null, new { @class = "text-danger" })
            </div>
            @if (Model != null && Model.Role != "Admin")
            {
                <div class="col-4" id="hideGender">
                    <select class="form-select p-3" name="gender" id="gender">
                        <option selected>Male</option>
                        <option>Female</option>
                        <option>Other</option>
                    </select>
                    @Html.ValidationMessageFor(m => m.Gender, null, new { @class = "text-danger" })
                </div>
            }
        </div>


        <div class="d-flex justify-content-center mb-3 ">
            <button type="submit" class="btn btn-success">SignUp</button>
        </div>
    </form>

    <div class="d-flex justify-content-center">
        <span>Already have an account ? &nbsp;</span>
        @Html.ActionLink("Sign In", "SignIn", "Login", null, new { @class = "text-success text-decoration-none" })
    </div>
</div>